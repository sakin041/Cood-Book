#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <queue>
#define white 0
#define grey 1
#define black 2
#define maxm 1000
using namespace std;

int vertex,edge;
int grid[maxm][maxm];
int dis[maxm],color[maxm],par[maxm];

void bfs(int source)
{
    for(int u=0; u<vertex;u++)
    {
        color[u]=white;
        par[u]=-1;
        dis[u]=0;
    }
    color[source]=white;
    par[source]=-1;
    dis[source]=0;
    queue <int> q;
    q.push(source);
    while(!q.empty())
    {
        int u=q.front();
        q.pop();
        cout << u << " ";
        for(int v=0; v<vertex; v++)
        {
            if(grid[u][v]==1)
            {
                if(color[v]==white)
                {
                    color[v]=grey;
                    dis[v]=dis[u]+1;
                    par[v]=u;
                    q.push(v);
                }
            }
        }
        color[u]=black;
    }

}

    int main()
    {
        int x,y;
        freopen("bfs.txt","r",stdin);
        cin >> vertex >> edge;
        for(int i=0;i<edge;i++)
        {
            cin >> x >> y;
            grid[x][y]=1;
            grid[y][x]=1;
        }
        bfs(0);
        return 0;
    }
